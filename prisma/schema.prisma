// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

enum UserType {
  ADMIN
  USER
}

enum UserSituation {
  ATIVO
  INATIVO
}

enum Status {
  ACEITO
  FINALIZADO
  CANCELADO
}

enum PaymentMethods {
  CARTAO_DE_CREDITO
  BOLETO
  PIX
}

enum DeliveryModality {
  RETIRADA
  ENTREGA
}

enum Unit {
  KG
  UN
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  
}

model Category {
  id            Int          @id @default(autoincrement())
  descricao     String
  Product       Product[]

  @@map("categoria")
}

model Variation {
  id            Int          @id @default(autoincrement())
  descricao     String
  Product       Product[]

  @@map("variacao")
}

model User {
  id          Int           @id @default(autoincrement())
  nome        String
  email       String
  senha       String
  nivel_acesso UserType
  situacao    UserSituation

  @@map("usuario")
}

model Client {
  id       Int           @id @default(autoincrement())
  nome     String
  telefone String?
  email    String?
  endereco  Address?
  pedidos  Request[]

  @@map("cliente")
}

model Address {
  id          Int    @id @default(autoincrement())
  cep         String
  bairro      String
  rua         String
  numero      String
  complemento String
  cliente     Client @relation(fields: [cliente_id], references: [id])
  cliente_id   Int @unique

  @@map("endereco")
}

model ProductImages {
  id  Int    @id @default(autoincrement())
  path String
  produto       Product     @relation(fields: [produto_id], references: [id])
  produto_id     Int  

  @@map("imagem_produto")
}

model Product {
  id          Int          @id @default(autoincrement())
  descricao   String
  categoria_id Int          
  categoria   Category     @relation(fields: [categoria_id], references: [id])
  variacao_id  Int          
  variacao    Variation    @relation(fields: [variacao_id], references: [id])
  unidade     Unit
  itens_pedido  RequestItem[]
  imagem_produto ProductImages[]

  @@map("produto")
}

model Request {
  id                Int              @id @default(autoincrement())
  cliente           Client           @relation(fields: [cliente_id], references: [id])
  cliente_id         Int
  data_pedido        DateTime         @default(now())
  data_entrega       DateTime
  status            Status
  forma_pagamento    PaymentMethods
  modalidade_entrega DeliveryModality
  itens_pedido        RequestItem[]

  @@map("pedido")
}

model RequestItem {
  id            Int         @id @default(autoincrement())
  pedido        Request     @relation(fields: [pedido_id], references: [id])
  pedido_id      Int
  produto       Product     @relation(fields: [produto_id], references: [id])
  produto_id     Int  
  quantidade    Int
  observacao    String?
  valor_unitario Float

  @@map("item_pedido")
}
